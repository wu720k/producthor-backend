-- I.

CREATE TABLE shipping_data (
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    postal_code      VARCHAR(16)  NOT NULL,
    city             VARCHAR(64)  NOT NULL,
    street           VARCHAR(128) NOT NULL,
    house_number     VARCHAR(16)  NOT NULL,
    additional_info  VARCHAR(256)
);


CREATE TABLE users (
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username          VARCHAR(64)  NOT NULL,
    password          VARCHAR(255) NOT NULL,   
    name              VARCHAR(128),
    is_admin          BOOLEAN      NOT NULL DEFAULT FALSE,
    shipping_data_id  BIGINT UNIQUE,
    CONSTRAINT uk_users_username UNIQUE (username),
    CONSTRAINT fk_users_shipping_data
        FOREIGN KEY (shipping_data_id) REFERENCES shipping_data (id)
);


CREATE TABLE products (
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR(128) NOT NULL,
    description TEXT,
    price       NUMERIC(12,2) NOT NULL
);


CREATE TABLE product_specifications (
    product_id  BIGINT       NOT NULL,
    spec_key    VARCHAR(64)  NOT NULL,
    spec_value  VARCHAR(256),
    CONSTRAINT fk_spec_product
        FOREIGN KEY (product_id) REFERENCES products (id),
    CONSTRAINT pk_product_specifications PRIMARY KEY (product_id, spec_key)
);


CREATE TABLE orders (
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id           BIGINT       NOT NULL,
    status            VARCHAR(16)  NOT NULL,          
    total_gross       NUMERIC(14,2) NOT NULL,
    shipping_data_id  BIGINT       NOT NULL UNIQUE,
    created_at        TIMESTAMPTZ  NOT NULL DEFAULT now(),
    updated_at        TIMESTAMPTZ  NOT NULL DEFAULT now(),
    CONSTRAINT fk_orders_user
        FOREIGN KEY (user_id) REFERENCES users (id),
    CONSTRAINT fk_orders_shipping_data
        FOREIGN KEY (shipping_data_id) REFERENCES shipping_data (id)
);


CREATE INDEX idx_orders_user_id   ON orders (user_id);
CREATE INDEX idx_orders_status    ON orders (status);


CREATE TABLE order_items (
    id                       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id                 BIGINT       NOT NULL,
    product_id               BIGINT       NOT NULL,
    quantity                 INTEGER      NOT NULL DEFAULT 1,
    unit_price_at_purchase   NUMERIC(12,2) NOT NULL,
    CONSTRAINT fk_order_items_order
        FOREIGN KEY (order_id)  REFERENCES orders (id),
    CONSTRAINT fk_order_items_product
        FOREIGN KEY (product_id) REFERENCES products (id)
);


CREATE INDEX idx_order_items_order_id ON order_items (order_id);

-- II.

CREATE TABLE categories (
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR(128) NOT NULL,
    description TEXT,
    CONSTRAINT uk_categories_name UNIQUE (name)
);


ALTER TABLE products
    ADD COLUMN image_url VARCHAR(512);

ALTER TABLE products
    ADD COLUMN category_id BIGINT;

ALTER TABLE products
    ADD CONSTRAINT fk_products_category
        FOREIGN KEY (category_id) REFERENCES categories (id);

CREATE INDEX idx_products_category_id ON products (category_id);

-- III.

ALTER TABLE orders DROP CONSTRAINT fk_orders_user;

ALTER TABLE orders ALTER COLUMN user_id DROP NOT NULL;

ALTER TABLE orders
  ADD CONSTRAINT fk_orders_user
  FOREIGN KEY (user_id) REFERENCES users (id)
  ON DELETE SET NULL;

  ALTER TABLE products
    ADD COLUMN available BOOLEAN NOT NULL DEFAULT TRUE;

DROP INDEX IF EXISTS idx_orders_status;

ALTER TABLE orders DROP COLUMN IF EXISTS status;

-- IV

ALTER TABLE orders
  DROP CONSTRAINT IF EXISTS orders_shipping_data_id_key;

CREATE INDEX IF NOT EXISTS idx_orders_shipping_data_id
  ON orders (shipping_data_id);